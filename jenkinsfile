node {
 properties([
  pipelineTriggers([
    [$class: 'GenericTrigger',
     genericVariables: [
       [ key: 'committer_name', value: '$.pusher.name' ],
       [ key: 'committer_email', value: '$.head_commit.author.email' ],
       [ key: 'branch', value: '$.ref', regexpFilter: 'refs/heads/'],
       [ key: 'source_branch', value: '$.before' ],
       [ key: 'target_branch', value: '$.after' ],
       [ key: 'repo_name', value: '$.repository.name' ],
       [ key: 'owner_name', value: '$.repository.owner.login' ],
       [ key: 'clone_url', value: '$.repository.clone_url' ]
    ],
    
    causeString: '$committer_name merged $source_branch into $target_branch in $clone_url',
    
    token: 'abc123',
    
    printContributedVariables: true,
    printPostContent: true,
    
    regexpFilterText: '$ref',
    regexpFilterExpression: '^refs/heads/.*'
   ]
  ])
 ])

 stage("Prepare") {
  deleteDir()
  sh '''
  echo git clone $clone_url
  echo git checkout $target_branch
  sleep 1
  '''
 }

 stage("Build") {
  sh '''
  echo ./gradlew build
  sleep 2
  '''
 }

 stage("Upload") {
  sh '''
  echo Uploading...
  sleep 1
  '''
 }

 stage("Email") {
   def subject = ""
   def bodyText = ""
   if (currentBuild.currentResult == 'SUCCESS') {
   subject = "Merged $source_branch into $target_branch in $repo_slug"
   bodyText = """
    Hi there!!
    
    You merged $source_branch into $target_branch in $clone_url.

    Version built from $target_branch
    
    See job here: $BUILD_URL

    See log here: $BUILD_URL/consoleText
    """
   } else {
   subject = "Failed to merge $source_branch into $target_branch in $repo_slug"
   bodyText = """
    Hi there!!
    
    You merged $source_branch into $target_branch in $clone_url and the merge failed (${currentBuild.currentResult}).
    
    See job here: $BUILD_URL

    See log here: $BUILD_URL/consoleText
    """
   }
   echo "Sending email with subject '$subject' and content:\n$bodyText"
   //emailext subject: subject
   // to: "$committer_email",
   // from: 'jenkins@company.com',
   // body: bodyText
 }

}
